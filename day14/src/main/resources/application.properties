#单数据源
spring.datasource.url=jdbc:mysql://192.168.1.103:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#多数据源
#spring.datasource.primary.jdbc-url=jdbc:mysql://192.168.1.103:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=true
#spring.datasource.primary.username=root
#spring.datasource.primary.password=123456
#spring.datasource.primary.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.datasource.secondary.jdbc-url=jdbc:mysql://192.168.1.103:3306/test2?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=true
#spring.datasource.secondary.username=root
#spring.datasource.secondary.password=123456
#spring.datasource.secondary.driver-class-name=com.mysql.cj.jdbc.Driver

#自动创建、更新、验证数据库表结构，有四个值
#create：每次加载 Hibernate 时都会删除上一次生成的表，然后根据 model 类再重新来生成新表
#create-drop：每次加载 Hibernate 时根据 model 类生成表，但是 sessionFactory 一关闭，表就自动删除
#update：最常用的属性,第一次加载根据model类生成表结构，以后会根据model类自动更新表结构，表结构改变了，不会删除以前的行，当应用第一次跑起来后，表结构才会建立起来
#validate ：每次加载 Hibernate 时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值
spring.jpa.properties.hibernate.hbm2ddl.auto=create
#dialect 主要是指定生成表名的存储引擎为 InnoDB
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#SQL 输出
spring.jpa.show-sql=true
#format 一下 SQL 进行输出
spring.jpa.properties.hibernate.format_sql=true
